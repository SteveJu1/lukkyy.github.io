---
layout:     post
title:      "计算机组成与发展历程 "
date:       2017-03-11 
categories: IT基础
tags: 组成原理
---



​        前沿：计算机的历史往前追溯的话就太久远了，现在一种观点是最早的计算机是--**算盘**，没错就是那个把珠子拨来拨去的东西。







为什么算盘被称作最早的计算机呢？这要从计算机的定义说起，一般认为工具有**输入、输出、运算规则**就能称作计算机。是不是觉得和**冯诺依曼的计算机结构**很像，也许计算机的这种架构的思考很早就出现了，后人是根据这种思考方式将实物做出来了。不过在这条道路上出现了很多天才式的人物，他们的思想往往长达半个世纪才被人理解。先从**查尔斯-巴贝奇**（Charles Babbage）开始，简单的介绍就是**第一个制造通用计算机的人**，可惜他出生在1791年。由于时代的因素（电磁学才刚开始发展），他只能用蒸汽、齿轮、弹簧这些东西，结果悲剧了，也没什么人知道他的工作。沉寂了一个多世纪后，图灵大佬站出来了，**图灵**是数学专业背景，他思考的是**如何将人的思维用逻辑和数学过程描述出来**。从现在来说这也是不可能做到的，不过图灵也没想还原整个大脑的思考过程，只在乎某一**部分特征可以用模型描述**的大脑。图灵极为**反感定义不清的讨论**，比如学习能力：是一种欲望、压力、本能共同形成的特征；（更普遍的情况是在生活中，你要和别人交流很多含糊不清的概念（哲学、艺术，政治）；用逻辑，表达方式，口才等说服别人，即使这种逻辑是错误的，这是**人和人交流**的方式。图灵大佬的思考方式更像机器之间的交流）；1935年22岁图灵发表论<可计算数及其在判定问题上的应用>（图灵机的概念就是从这来的）说下我的理解：大概是 **对有限计算步骤内能求解的数学问题**，设计了一种有效的，通用的办法，保证按照这个办法做事，最终能够找到答案。（所以从理论上现有计算机不可能发展出超人工智能，计算机做的都是数学模型计算的工作，一切都是可以提前计算预知的）。

#### 计算机发展阶段

电子管，晶体管，小规模集成电路，大规模集成电路

单道批处理阶段：一次处理一个任务，大概过程：文件输入到CPU，CPU执行完命令，文件输出。缺点：要等一个IO的输入输出后才运行，速度太慢。

多道批处理阶段：在单道批处理阶段做了改进，有多个IO输入输出。在一个文件处于IO阶段时，另外的文件使用CUP，利用了IO的时间。

操作系统阶段：多个任务有优先级，能够人机交互运行命令，采用的是分时操作



#### 数制

数制之间的转换:与十进制转换方式： 除基取余法再将余数反过来写，比如十进制5转二进制，求小数用乘基取整

**校验码**

奇校验码，加上后 有奇数个1

汉明码：可以校验出错在哪一位

循环冗余码（crc）网络传输时常用

**原码，反码，补码**

原码:符号 +绝对值

反码：正数的反码和原码原码一样，负数反码符号位不变，其他位取反

补码 ：正数的补码不变，负数的补码就是反码+1（用来做计算5+（-3）转成补码计算）         

> ​               十进制      二进制
> 原码：     2            0000 0010
> ​                -2           1000 0010 
>
> 反码：     2            0000 0010
> ​                -2           1111 1101
>
> 补码：     2            0000 0010 
> ​                -2           1111 1110 

```
2 << 1 = 4 = 2*2
2 << 2 = 8 = 2*2*2
2 << n = 2*（2的n次方）
m << n = m * （2的n次方）
0 表示正数+ ，1表示负数-
```

#### 进程

用户态和内核态：内核态是与系统调用相关的程序，用户态是非系统相关程序（比如用户写的程序，用户态通过访官指令能进入内核态）

> 在Linux系统中32位机有2^32（4G左右）的空间放地址：1G是操作系统内核空间，3G是用户空间；临界资源：一次只允许一个进程访问的资源



##### 进程切换

任何进程都是在操作系统内核下，PCB控制运行的，

进程切换过程为：1 用**程序计数器**和其他寄存器，保存进程上下文; 2 更新PCB信息; 3 把进程的PCB移入相应的队列，如就绪、阻塞等;  4 选择另一进程，恢复上下文运行；

进程状态：  新建--- 就绪  ------运行----死亡

​                                           阻塞

> 阻塞是要调用的资源还没未到达，系统主动将线程切换阻塞状态。阻塞状态要先转成就绪状态才能到运行态。比如要求用打印机时，已被占用了

> 文件描述符（File descriptor）文件的引用

##### 缓存 I/O

缓存 I/O 又被称作标准 I/O，大多数文件系统的默认 I/O 操作都是缓存 I/O。在 Linux 的缓存 I/O 机制中，操作系统会将 I/O 的数据缓存在文件系统的页缓存（ page cache ）中，也就是说，数据会先被拷贝到操作系统内核的缓冲区中，然后才会从操作系统内核的缓冲区拷贝到应用程序的地址空间。



### 指令

计算机中操作的命令叫指令，所有的指令叫指令集

指令的地址，操作数 ：放操作的指令 ，地址：放被操作的对象

寻址方式：



##### 总线

总线是计算机内部传输信息的线路，为了增加IO灵活度

系统总线分类：数据、地址、控制总线

总线仲裁：收集所有的IO请求，通过算法来分配哪些IO请求先运行，

> 实时，共享：同一时间只允许一个IO运行传数据，可以所有IO同时接收消息











